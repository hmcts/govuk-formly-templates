!function(o,n){"object"==typeof exports&&"undefined"!=typeof module?n(exports,require("@angular/common"),require("@angular/forms"),require("@angular/core"),require("@ngx-formly/core")):"function"==typeof define&&define.amd?define("jui-formly-lib",["exports","@angular/common","@angular/forms","@angular/core","@ngx-formly/core"],n):n(o["jui-formly-lib"]={},o.ng.common,o.ng.forms,o.ng.core,o.core)}(this,function(o,n,e,t,l){"use strict";var r=function(){function o(){}return o.decorators=[{type:t.Injectable,args:[{providedIn:"root"}]}],o.ctorParameters=function(){return[]},o.ngInjectableDef=t.defineInjectable({factory:function(){return new o},token:o,providedIn:"root"}),o}(),i=function(){function o(){}return o.prototype.ngOnInit=function(){},o.decorators=[{type:t.Component,args:[{selector:"enl-jui-formly-lib",template:"\n    <p>\n      jui-formly-lib works!\n    </p>\n  "}]}],o.ctorParameters=function(){return[]},o}(),a=function(o,n){return(a=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(o,n){o.__proto__=n}||function(o,n){for(var e in n)n.hasOwnProperty(e)&&(o[e]=n[e])})(o,n)};function s(o,n){function e(){this.constructor=o}a(o,n),o.prototype=null===n?Object.create(n):(e.prototype=n.prototype,new e)}var u=function(o){function n(){return null!==o&&o.apply(this,arguments)||this}return s(n,o),n.decorators=[{type:t.Component,args:[{selector:"formly-field-input",template:'\n        <div class="govuk-form-group">\n            <label class="govuk-label" for="for">\n                {{to.label}}\n                <span *ngIf="to.required === true">*</span>\n            </label>\n            <input class="govuk-input" id="to.id" name="to.name" type="input" [formControl]="formControl" [formlyAttributes]="field">\n        </div>'}]}],n}(l.FieldType),c=function(o){function n(){return null!==o&&o.apply(this,arguments)||this}return s(n,o),n.decorators=[{type:t.Component,args:[{selector:"formly-field-select",template:'\n        <div class="govuk-form-group">\n            <label class="govuk-label" for="for">\n                {{to.label}}\n                <span *ngIf="to.required === true">*</span>\n            </label>\n            <select class="govuk-select" id="to.id" name="to.name" [formControl]="formControl" [formlyAttributes]="field">\n                <option *ngIf="to.placeholder" [ngValue]="null">{{ to.placeholder }}</option>\n                <ng-container *ngFor="let option of to.options">\n                    <option [ngValue]="option.value" [disabled]="option.disabled">\n                        {{ option.label }}\n                    </option>\n                </ng-container>\n            </select>\n        </div>\n    '}]}],n}(l.FieldType),p=function(o){function n(){return null!==o&&o.apply(this,arguments)||this}return s(n,o),n.decorators=[{type:t.Component,args:[{selector:"formly-field-checkbox",template:'\n      <div class="govuk-form-group">\n        <fieldset class="govuk-fieldset">\n          <legend class="govuk-fieldset__legend govuk-fieldset__legend--xl">\n            <h1 class="govuk-fieldset__heading">\n              {{to.label}}\n            </h1>\n          </legend>\n          <span id="to.id" class="govuk-hint">\n            {{to.description}}\n          </span>\n          <div class="govuk-checkboxes">\n            <div class="govuk-checkboxes__item" *ngFor="let option of to.options">\n              <input class="govuk-checkboxes__input"\n                     id="option.id"\n                     name="option.label"\n                     type="checkbox"\n                     [formControl]="formControl"\n                     [formlyAttributes]="field"\n                     [value]="option.value">\n              <label class="govuk-label govuk-checkboxes__label" [for]="option.id">\n                {{ option.label }}\n                <span *ngIf="to.required === true">*</span>\n              </label>\n            </div>\n          </div>\n        </fieldset>\n      </div>'}]}],n}(l.FieldType),d=function(o){function n(){return null!==o&&o.apply(this,arguments)||this}return s(n,o),n.decorators=[{type:t.Component,args:[{selector:"formly-field-radio",template:'\n    <div class="govuk-form-group">\n      <fieldset class="govuk-fieldset">\n        <legend class="govuk-fieldset__legend govuk-fieldset__legend--xl">\n          <h1 class="govuk-fieldset__heading">\n            {{to.label}}\n          </h1>\n        </legend>\n        <span id="to.id" class="govuk-hint">\n          {{to.description}}\n        </span>\n        <div class="govuk-radios">\n          <div class="govuk-radios__item" *ngFor="let option of to.options">\n            <input class="govuk-radios__input" \n                   id="option.id" \n                   name="option.label" \n                   type="radio" \n                   [formControl]="formControl"\n                   [formlyAttributes]="field" \n                   [value]="option.value">\n            <label class="govuk-label govuk-radios__label" for="option.id">\n              {{option.label}}\n            </label>\n          </div>\n        </div>\n      </fieldset>\n    </div>'}]}],n}(l.FieldType),f=function(o){function n(){return null!==o&&o.apply(this,arguments)||this}return s(n,o),n.decorators=[{type:t.Component,args:[{selector:"formly-field-textarea",template:'\n    <div class="govuk-form-group">\n      <label class="govuk-label" for="more-detail">\n        {{to.label}}\n      </label>\n      <span id="more-detail-hint" class="govuk-hint">\n        {{to.description}}\n      </span>\n      <textarea class="govuk-textarea"\n                [cols]="to.cols"\n                [rows]="to.rows"\n                [formControl]="formControl"\n                [formlyAttributes]="field">\n      </textarea>\n    </div>\n  '}]}],n}(l.FieldType),m=function(){function o(){}return o.decorators=[{type:t.NgModule,args:[{declarations:[i,u,c,p,d,f],imports:[n.CommonModule,e.ReactiveFormsModule,l.FormlyModule.forRoot({types:[{name:"input",component:u},{name:"select",component:c},{name:"checkbox",component:p},{name:"radio",component:d},{name:"textarea",component:f}]})],exports:[i,u,c,p,d,f]}]}],o}();o.JuiFormlyLibService=r,o.JuiFormlyLibComponent=i,o.JuiFormlyLibModule=m,o.FormlyFieldInput=u,o.FormlyFieldSelect=c,o.FormlyFieldCheckbox=p,o.ɵa=d,o.ɵb=f,Object.defineProperty(o,"__esModule",{value:!0})});
//# sourceMappingURL=jui-formly-lib.umd.min.js.map