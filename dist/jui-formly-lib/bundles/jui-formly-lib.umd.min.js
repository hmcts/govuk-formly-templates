!function(o,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/common"),require("@angular/forms"),require("@angular/core"),require("@ngx-formly/core")):"function"==typeof define&&define.amd?define("jui-formly-lib",["exports","@angular/common","@angular/forms","@angular/core","@ngx-formly/core"],e):e(o["jui-formly-lib"]={},o.ng.common,o.ng.forms,o.ng.core,o.core)}(this,function(o,e,n,t,l){"use strict";var r=function(){function o(){}return o.decorators=[{type:t.Injectable,args:[{providedIn:"root"}]}],o.ctorParameters=function(){return[]},o.ngInjectableDef=t.defineInjectable({factory:function(){return new o},token:o,providedIn:"root"}),o}(),i=function(){function o(){}return o.prototype.ngOnInit=function(){},o.decorators=[{type:t.Component,args:[{selector:"enl-jui-formly-lib",template:"\n    <p>\n      jui-formly-lib works!\n    </p>\n  "}]}],o.ctorParameters=function(){return[]},o}(),a=function(o,e){return(a=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(o,e){o.__proto__=e}||function(o,e){for(var n in e)e.hasOwnProperty(n)&&(o[n]=e[n])})(o,e)};function s(o,e){function n(){this.constructor=o}a(o,e),o.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}var u=function(o){function e(){return null!==o&&o.apply(this,arguments)||this}return s(e,o),e.decorators=[{type:t.Component,args:[{selector:"formly-field-input",template:'\n        <div class="govuk-form-group">\n            <label class="govuk-label" for="for">\n                {{to.label}}\n                <span *ngIf="to.required === true">*</span>\n            </label>\n            <input class="govuk-input" id="to.id" name="to.name" type="input" [formControl]="formControl" [formlyAttributes]="field">\n        </div>'}]}],e}(l.FieldType),c=function(o){function e(){return null!==o&&o.apply(this,arguments)||this}return s(e,o),e.decorators=[{type:t.Component,args:[{selector:"formly-field-select",template:'\n        <div class="govuk-form-group">\n            <label class="govuk-label" for="for">\n                {{to.label}}\n                <span *ngIf="to.required === true">*</span>\n            </label>\n            <select class="govuk-select" id="to.id" name="to.name" [formControl]="formControl" [formlyAttributes]="field">\n                <option *ngIf="to.placeholder" [ngValue]="null">{{ to.placeholder }}</option>\n                <ng-container *ngFor="let option of to.options">\n                    <option [ngValue]="option.value" [disabled]="option.disabled">\n                        {{ option.label }}\n                    </option>\n                </ng-container>\n            </select>\n        </div>\n    '}]}],e}(l.FieldType),p=function(o){function e(){return null!==o&&o.apply(this,arguments)||this}return s(e,o),e.decorators=[{type:t.Component,args:[{selector:"formly-field-checkbox",template:'\n      <div class="govuk-form-group">\n        <fieldset class="govuk-fieldset">\n          <legend class="govuk-fieldset__legend govuk-fieldset__legend--xl">\n            <h1 class="govuk-fieldset__heading">\n              {{to.label}}\n            </h1>\n          </legend>\n          <span id="to.id" class="govuk-hint">\n            {{to.description}}\n          </span>\n          <div class="govuk-checkboxes">\n            <div class="govuk-checkboxes__item" *ngFor="let option of to.options">\n              <input class="govuk-checkboxes__input" type="checkbox" [formControl]="formControl" [formlyAttributes]="field">\n              <label class="govuk-label govuk-checkboxes__label" [for]="id">\n                {{ option.label }}\n                <span *ngIf="to.required === true">*</span>\n              </label>\n            </div>\n          </div>\n        </fieldset>\n      </div>'}]}],e}(l.FieldType),d=function(o){function e(){return null!==o&&o.apply(this,arguments)||this}return s(e,o),e.decorators=[{type:t.Component,args:[{selector:"formly-field-radio",template:'\n    <div class="govuk-form-group">\n      <fieldset class="govuk-fieldset">\n        <legend class="govuk-fieldset__legend govuk-fieldset__legend--xl">\n          <h1 class="govuk-fieldset__heading">\n            {{to.label}}\n          </h1>\n        </legend>\n          <div class="govuk-radios">\n            <div class="govuk-radios__item" *ngFor="let option of to.options">\n              <input class="govuk-radios__input"\n                     type="radio"\n                     [value]="option.value"\n                     [formControl]="formControl"\n                     [formlyAttributes]="field">\n              <label class="govuk-label govuk-radios__label">\n                {{option.label}}\n              </label>\n            </div>\n          </div>\n      </fieldset>\n    </div>'}]}],e}(l.FieldType),f=function(o){function e(){return null!==o&&o.apply(this,arguments)||this}return s(e,o),e.decorators=[{type:t.Component,args:[{selector:"formly-field-textarea",template:'\n    <div class="govuk-form-group">\n      <label class="govuk-label" for="more-detail">\n        {{to.label}}\n      </label>\n      <span id="more-detail-hint" class="govuk-hint">\n        {{to.description}}\n      </span>\n      <textarea class="govuk-textarea"\n                [cols]="to.cols"\n                [rows]="to.rows"\n                [formControl]="formControl"\n                [formlyAttributes]="field">\n      </textarea>\n    </div>\n  '}]}],e}(l.FieldType),m=function(){function o(){}return o.decorators=[{type:t.NgModule,args:[{declarations:[i,u,c,p,d,f],imports:[e.CommonModule,n.ReactiveFormsModule,l.FormlyModule.forRoot({types:[{name:"input",component:u},{name:"select",component:c},{name:"checkbox",component:p},{name:"radio",component:d},{name:"textarea",component:f}]})],exports:[i,u,c,p,d,f]}]}],o}();o.JuiFormlyLibService=r,o.JuiFormlyLibComponent=i,o.JuiFormlyLibModule=m,o.FormlyFieldInput=u,o.FormlyFieldSelect=c,o.FormlyFieldCheckbox=p,o.ɵa=d,o.ɵb=f,Object.defineProperty(o,"__esModule",{value:!0})});
//# sourceMappingURL=jui-formly-lib.umd.min.js.map